{"version":3,"sources":["components/GamePageComponent.js","shared/avatars.js","shared/pages.js","components/AvatarDirectoryComponent.js","components/AvatarInfoComponent.js","components/HomeComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["GamePage","props","toggleModal","bind","state","selectedPage","isModalOpen","this","setState","page","currentPage","pages","filter","id","yourAvatar","avatars","avatar","selectedAvatar","yourAvatarImage","image","yourAvatarName","name","Fragment","TransitionGroup","CSSTransition","key","timeout","classNames","className","onClick","src","Button","href","Modal","style","borderRadius","isOpen","toggle","ModalBody","description","strengths","weaknesses","alt","story","onPageChange","button1Id","button1","button2Id","button2","Component","AVATARS","PAGES","RenderDirectoryItem","in","transformProps","exitTransform","Card","CardImg","width","height","objectFit","CardTitle","CardBody","AvatarDirectory","FadeIn","styled","div","keyframes","fadeIn","directory","map","onBackClick","RenderAvatar","SlideInLeft","slideInLeft","to","AvatarInfo","Home","Bounce","bounce","loop","wrapper","steps","Main","window","scrollBy","avatarId","render","location","exact","path","onAvatarSelect","onAvatarReset","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e55c7624.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Modal, ModalBody } from 'reactstrap';\r\nimport Sound from 'react-sound';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nfunction ToggleShowButton({currentPage, onPageChange}) {\r\n    console.log(currentPage)\r\n    if (!currentPage.button2) {\r\n        console.log('failed', currentPage.button2)\r\n        return <div />;\r\n    } else {\r\n        console.log(currentPage.button2)\r\n        return <Button onClick={() => onPageChange(currentPage.button2Id)}>{currentPage.button2}</Button>;\r\n    }\r\n\r\n};\r\n\r\nclass GamePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n\r\n        this.state = {\r\n            selectedPage: 'start',\r\n            isModalOpen: false,\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    onPageChange(page) {\r\n        this.setState({ selectedPage: page });\r\n    }\r\n\r\n    render() {\r\n        const currentPage = this.props.pages.filter(page => page.id === this.state.selectedPage)[0];\r\n        const yourAvatar = this.props.avatars.filter(avatar => avatar.id === this.props.selectedAvatar)[0];\r\n        const yourAvatarImage = yourAvatar.image;\r\n        const yourAvatarName = yourAvatar.name;\r\n\r\n\r\n        return (\r\n           \r\n            <React.Fragment>\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        key={this.state.selectedPage}\r\n                        timeout={2000}\r\n                        classNames=\"pageout\"\r\n                    >\r\n                        <div className=\"container page\">\r\n                        <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <img onClick={this.toggleModal} className=\"imageCorner\" src={yourAvatarImage} />\r\n                        <p className=\"nameText\">{yourAvatarName}</p>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button href=\"/home\" className=\"btn-success btn-lg text-white animBtn homeBtn\">Reset Avatar</Button>\r\n                    </div>\r\n                    <Modal  style={{borderRadius: '20px'}} className='text-center text-white'  isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                     <ModalBody className='bg-success' style={{borderRadius: '5px'}}>\r\n                         <strong>{yourAvatar.name}</strong>\r\n                         <br />\r\n                         <p>{yourAvatar.description}</p>\r\n                         <strong>Strengths:</strong>{yourAvatar.strengths}\r\n                         <br />\r\n                         <strong>Weaknesses:</strong>{yourAvatar.weaknesses}\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n                            <img src={currentPage.image} className=\"bg\" alt=\"Background\" />\r\n                            \r\n                            <p className=\"storyText\">{currentPage.story}</p>\r\n                            <div className=\"row\">\r\n                                <div className=\"col btn1\">\r\n                                    <Button className=\"btn-lg\" onClick={() => this.onPageChange(currentPage.button1Id)}>{currentPage.button1}</Button>\r\n                                </div>\r\n                                <div className=\"col btn2\">\r\n                                 {currentPage.button2Id && <Button className=\"btn-lg\" onClick={() => this.onPageChange(currentPage.button2Id)}>{currentPage.button2}</Button> }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n               {/*  <Sound\r\n                    url=\"/assets/audio/jungle.wav\"\r\n                    playStatus={Sound.status.PLAYING}\r\n                    playFromPosition={1}\r\n                /> */}\r\n\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GamePage;\r\n\r\n","export const AVATARS = [\r\n    {\r\n        id: 0,\r\n        name: 'Dr. Smolder Bravestone',\r\n        description: 'Archeologist, international explorer',\r\n        image: 'assets/images/man1.png',\r\n        strengths: 'fearless, climbing, speed, boomerang, smoldering intensity',\r\n        weaknesses: \"none\"\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Franklin Moose Finbon',\r\n        description: 'Expert in weapons and zoology',\r\n        image: 'assets/images/man2.png',\r\n        strengths: 'zoology, weapons valet',\r\n        weaknesses: \"cake, speed, strength\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Professor Shelly Oberon',\r\n        description: 'Cartographer-code-breaker-curvy genius',\r\n        image: 'assets/images/manp.png',\r\n        strengths: 'cartography, archaeology, paleontology',\r\n        weaknesses: 'endurance'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Ruby Roundhouse',\r\n        description: 'Fighter-killer of men, Miss Alabama 1986',\r\n        image: 'assets/images/girl.png',\r\n        strengths: 'karate, tai chi, aikido, dance fighting',\r\n        weaknesses: 'venom'\r\n    }\r\n];","export const PAGES = [\r\n    {\r\n        id: \"start\",\r\n        story: \"You wake up and find yourself in a jungle surrounded by three equally confused people. You see their names floating above their heads. You look up and see your own name. \",\r\n        image: \"/assets/images/jungle.jpg\",\r\n        button1: \"Begin the adventure!\",\r\n        button1Id: \"river\",\r\n        button2: \"\",\r\n        button2Id: \"\",\r\n    },\r\n    {\r\n        id: \"river\",\r\n        story: \"Yourself, and three companions, stubble upon a river. Your friend approaches the river for a drink. As they reach the waters edge a giant hippo explodes from the water grabbing her in its mouth.\",\r\n        image: \"/assets/images/river.jpg\",\r\n        button1: \"Be a hero.\",\r\n        button1Id: \"hippoDeath\",\r\n        button2: \"Run away.\",\r\n        button2Id: \"car\",\r\n    },\r\n    {\r\n        id: \"hippoDeath\",\r\n        story: \"You are eaten by a hippo in an attempt to save them. GAME OVER.\",\r\n        image: \"/assets/images/hippo.jpg\",\r\n        button1: \"Reset\",\r\n        button1Id: \"start\",\r\n        button2: \"\",\r\n        button2Id: \"\",\r\n    },\r\n    {\r\n        id: \"car\",\r\n        story: \"You run away from the hippos narrowly escaping their chomping jaws. As you flee a car pulls up alongside you. “Get in” the stranger shouts. You and the two remaining adventurers jump straight in.\",\r\n        image: \"/assets/images/jeep.jpg\",\r\n        button1: \"Introduce yourself.\",\r\n        button1Id: \"storyGoal\",\r\n        button2: \"\",\r\n        button2Id: \"\"\r\n    },\r\n    {\r\n        id: \"storyGoal\",\r\n        story: \"Hello. The stranger greets you warmly. “My name is Nigel and you lucky adventurers have been chosen to lift the curse on Jumanji. You must take this jewel to the jaguar statue”. He hands you a jewel. “Well this is your stop, good luck out there” Nigel says as he waves goodbye. You get out of the car and discuss what to do.\",\r\n        image: \"/assets/images/jeep.jpg\",\r\n        button1: \"This is too hard, lets just go home.\",\r\n        button1Id: \"giveUp\",\r\n        button2: \"I want to save Jumanji\",\r\n        button2Id: \"findDesert\",\r\n    },\r\n    {\r\n        id: \"giveUp\",\r\n        story: \"You give up and spend your days hiding from the hippos. GAME OVER.\",\r\n        image: \"/assets/images/tent.jpg\",\r\n        button1: \"Reset\",\r\n        button1Id: \"start\",\r\n        button2: \"\",\r\n        button2Id: \"\"\r\n    },\r\n    {\r\n        id: \"findDesert\",\r\n        story: \"Exploring deeper you find a break in the trees leading to a desert. As you walk deeper into the desert you are suddenly attacked by a villainous biker gang.\",\r\n        image: \"/assets/images/desertBiker.jpg\",\r\n        button1: \"Jump off a cliff to try and escape.\",\r\n        button1Id: \"cliffJump\",\r\n        button2: \"Try and outrun the gang back through the trees.\",\r\n        button2Id: \"bikerDeath\"\r\n    },\r\n    {\r\n        id: \"bikerDeath\",\r\n        story: \"The bikers catch up to you and end your adventure. GAME OVER.\",\r\n        image: \"/assets/images/biker.jpg\",\r\n        button1: \"Reset\",\r\n        button1Id: \"start\",\r\n        button2: \"\",\r\n        button2Id: \"\"\r\n    },\r\n    {\r\n        id: \"cliffJump\",\r\n        story: \"You jump the cliff and fall into a river, escaping the bikers successfully. You let the river carry you downstream until you see some buildings. You leave the river and find yourself in a bazaar. You see many buildings in front of you including a chapel with magnificent towers, as you are admiring the town a boy bumps into you and quickly gets up to run away.\",\r\n        image: \"/assets/images/market.jpg\",\r\n        button1: \"Investigate the chapel.\",\r\n        button1Id: \"insideChapel\",\r\n        button2: 'Follow the suspicious boy',\r\n        button2Id: 'basketRoom',\r\n    },\r\n    {\r\n        id: \"insideChapel\",\r\n        story: \"You enter and see two doors. One with crimson red glass, the other adorned with glass of royal blue.\",\r\n        image: \"/assets/images/chapel.jpg\",\r\n        button1: \"Enter the red door\",\r\n        button1Id: \"redDoorDeath\",\r\n        button2: \"Enter the blue door.\",\r\n        button2Id: \"blueDoorDeath\",\r\n    },\r\n    {\r\n        id: \"redDoorDeath\",\r\n        story: \"You are poisoned by venomous snakes. GAME OVER\",\r\n        image: \"/assets/images/redSnake.jpg\",\r\n        button1: \"Reset\",\r\n        button1Id: \"start\",\r\n        button2: \"\",\r\n        button2Id: \"\",\r\n    },\r\n    {\r\n        id: \"blueDoorDeath\",\r\n        story: \"You are eaten by a room full of wild dogs. GAME OVER.\",\r\n        image: \"/assets/images/wildDogs.jpg\",\r\n        button1: \"Reset\",\r\n        button1Id: \"start\",\r\n        button2: \"\",\r\n        button2Id: \"\",\r\n    },\r\n    {\r\n        id: \"basketRoom\",\r\n        story: \"The boy leads you to a room full of baskets and then escapes through a child size gap in the wall. Your group decides to investigate the baskets. You find various fruits and grains. Then in the very last basket you find the missing map piece that can lead you to the jaguar statue.\",\r\n        image: \"/assets/images/statue.jpg\",\r\n        button1: \"Head to the jaguar statue to save Jumanji.\",\r\n        button1Id: \"statue\",\r\n        button2: \"\",\r\n        button2Id: \"\",\r\n    },\r\n    {\r\n        id: \"statue\",\r\n        story: \"You arrive at the statue and see a gap in the jaguar statues eye that is just the right size for the jewel.\",\r\n        image: \"/assets/images/statue.jpg\",\r\n        button1: \"Place the jewel into the jaguar's eye.\",\r\n        button1Id: \"win\",\r\n        button2: \"\",\r\n        button2Id: \"\",\r\n    },\r\n    {\r\n        id: \"win\",\r\n        story: \"You broke the curse and saved Jumanji. YOU WIN!!!\",\r\n        image: \"/assets/images/winning.jpg\",\r\n        button1: \"Reset\",\r\n        button1Id: \"start\",\r\n        button2: \"\",\r\n        button2Id: \"\",\r\n    } \r\n]","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';\r\nimport { fadeIn } from 'react-animations';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderDirectoryItem({ avatar, onClick }) {\r\n\r\n    return (\r\n        <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.9) translateY(-10%)'\r\n            }}>\r\n            <Card onClick={() => onClick(avatar.id)} className=\"bg-success animCard flex-fill\" >\r\n                <CardImg style={{ width: \"100%\", height: \"30vw\", objectFit: \"cover\" }} src={avatar.image} alt={avatar.name} />\r\n                <CardTitle>\r\n                    {avatar.name}\r\n                </CardTitle>\r\n                <CardBody>\r\n                    <p>{avatar.description}</p>\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </FadeTransform>\r\n\r\n    );\r\n\r\n}\r\n\r\nfunction AvatarDirectory(props) {\r\n    const FadeIn = styled.div`animation: 7s ${keyframes`${fadeIn}`}`;\r\n\r\n    const directory = props.avatars.map(avatar => {\r\n        return (\r\n            <div key={avatar.id} className=\"col-10 col-sm-6 col-md-3 mb-2 d-flex\" >\r\n                <RenderDirectoryItem avatar={avatar} onClick={props.onClick}\r\n                    onBackClick={props.onBackClick} />\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"container\">\r\n            <FadeIn><h3 className=\"homeText\">Choose A Character</h3></FadeIn>\r\n            <div className=\"row \">\r\n                {directory}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AvatarDirectory;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { slideInLeft } from 'react-animations';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n\r\nfunction RenderAvatar({ avatar, onBackClick }) {\r\n    const SlideInLeft = styled.div`animation: 2s ${keyframes`${slideInLeft}`}`;\r\n\r\n\r\n    return (\r\n        <SlideInLeft>\r\n            <div className=\"row bgrow align-items-center\">\r\n\r\n                <div className=\"col-sm-4\">\r\n\r\n                    <img className=\"img-fluid\" src={avatar.image} alt={avatar.name} />\r\n                </div>\r\n                <div className=\"col-sm-4 homeText\">\r\n                    <h2>{avatar.name}</h2>\r\n                    <p>{avatar.description}</p>\r\n                    <p><strong>Strengths: </strong>{avatar.strengths}</p>\r\n                    <p><strong>Weaknesses: </strong>{avatar.weaknesses}</p>\r\n                </div>\r\n\r\n                <div className=\"col-sm-4\">\r\n\r\n                    <Button className=\"btn btn-success animBtn btn-lg m-2 text-white\" onClick={() => onBackClick()} ><h3>Go Back</h3></Button>\r\n\r\n                    <Button className=\"btn btn-success animBtn btn-lg m-2\"><Link className=\"text-white\" to='/gamepage'><h3 >Start</h3></Link></Button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </SlideInLeft>\r\n\r\n    );\r\n}\r\n\r\n\r\nfunction AvatarInfo(props) {\r\n    if (props.avatar) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <RenderAvatar avatar={props.avatar}\r\n                        onBackClick={props.onBackClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AvatarInfo;","import React, { Component } from 'react';\r\nimport AvatarDirectory from './AvatarDirectoryComponent';\r\nimport AvatarInfo from './AvatarInfoComponent';\r\nimport Typical from 'react-typical';\r\nimport { bounce } from 'react-animations';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nclass Home extends Component {\r\n    \r\n   render(){\r\n\r\n    const Bounce = styled.div`animation: 3s ${keyframes`${bounce}`}`;\r\n   \r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"bg text-white p-5\">\r\n                    <Bounce><h1 className=\"homeText m-3\">Jungle Game</h1></Bounce>\r\n                    <p className=\"aboutGame\">\r\n                        <Typical loop={3} wrapper='b' steps={['A Game For Those Who Seek To Find... A Way To Leave Their World Behind', 1000]} />\r\n                    </p>\r\n                    <AvatarDirectory avatars={this.props.avatars}  onClick={this.props.onClick}\r\n                    onBackClick={this.props.onClick}\r\n                    />\r\n                    <AvatarInfo avatar={this.props.avatar }\r\n                    onBackClick={this.props.onBackClick}/>\r\n                     \r\n                </div>\r\n               \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport GamePage from './GamePageComponent';\r\nimport { AVATARS } from '../shared/avatars';\r\nimport { PAGES } from '../shared/pages';\r\nimport Home from './HomeComponent';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            avatars: AVATARS,\r\n            selectedAvatar: null,\r\n            pages: PAGES,\r\n            selectedPage: 0\r\n        }\r\n    }\r\n      \r\n    componentDidUpdate(){\r\n        window.scrollBy(0, 2000);\r\n    }\r\n\r\n    onAvatarSelect(avatarId) {\r\n        this.setState({ selectedAvatar: avatarId });\r\n    }\r\n\r\n\r\n      onAvatarReset() {\r\n        this.setState({ selectedAvatar: null });\r\n        \r\n      }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Route render={({location}) => (\r\n                <TransitionGroup>\r\n                <CSSTransition\r\n                    key={location.key}\r\n                    timeout={1000}\r\n                    classNames='fade'\r\n                >  \r\n                    <Switch location={location}>\r\n\r\n                        <Route exact path='/home' render={() => <Home pages={this.state.pages} avatars={this.state.avatars} selectedAvatar={this.state.selectedAvatar}\r\n                            onClick={avatarId => this.onAvatarSelect(avatarId)} onBackClick={()=> this.onAvatarReset()} avatar={this.state.avatars.filter(avatar => avatar.id === this.state.selectedAvatar)[0]}\r\n                        />} />\r\n\r\n                        <Route exact path='/gamepage' render={() => <GamePage pages={this.state.pages} avatars={this.state.avatars} selectedAvatar={this.state.selectedAvatar} />} />\r\n\r\n                        <Redirect to='/home' render={() => <Home pages={this.state.pages} />} />\r\n\r\n                    </Switch>\r\n                </CSSTransition>                      \r\n            </TransitionGroup>\r\n            )} />\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n      return (\r\n          <BrowserRouter>\r\n              <div className=\"App\">\r\n                  <Main />\r\n              </div>\r\n          </BrowserRouter>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}